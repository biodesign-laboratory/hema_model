#Reachability_Analysis
using ReachabilityAnalysis, ModelingToolkit, Plots, OrdinaryDiffEq, DifferentialEquations, DiffEqCallbacks
include("Hematopoiesis_Model")

#Initial Conditions
Hq0 = [11100.0, 11100.1]
Hm0 = [1000.0, 1000.1]
N0 = [9750.0, 10000.1]
P0 = [1000.0, 1000.1]
A0 = [1000.0, 1000.1]
SCSF0 = [32000.0, 32000.1]
K0 = [0.0, 0.1]
S0 = [10.0, 10.1]
Q0 = [1.0, 1.1]
U0 = [0.5, 0.6]

#Create input hyperrectangle given earlier initial conditions
X0 = Hyperrectangle(low = [Hq0[1], Hm0[1], N0[1], P0[1], A0[1], SCSF0[1], K0[1], Q0[1], S0[1], U0[1]], high = [Hq0[2], Hm0[2], N0[2], P0[2], A0[2], SCSF0[2], K0[2], Q0[2], S0[2], U0[2]])

#Create an initial value problem, given our hyperrectangle and ODEs
function model(X0)
    S = @system(x' = biomodel(x), dim:10)
    return IVP(S, X0)
end

#Solve the IVP
prob = model(X0)
sol = solve(prob, T=150);

#plot solution with the plotlyjs backend for more exact reading
Hq = plot(sol, vars=(0,1), xlabel="time", ylabel="Hq")
Hm = plot(sol, vars=(0,2), xlabel="time", ylabel="Hm")
N = plot(sol, vars=(0,3), xlabel="time", ylabel="PAMPS")
P = plot(sol, vars=(0,4), xlabel="time", ylabel="Pro-Inflammatory")
A = plot(sol, vars=(0,5), xlabel="time", ylabel="Anti-Inflammatory")
SCSF = plot(sol, vars=(0,6), xlabel="time", ylabel="SCSF")
K = plot(sol, vars=(0,7), xlabel="time", ylabel="DAMPS")
S = plot(sol, vars=(0,8), xlabel="time", ylabel="Stable")
Q = plot(sol, vars=(0,9), xlabel="time", ylabel="Active")
U = plot(sol, vars=(0,10), xlabel="time", ylabel="Inactive")
plot(Hq, Hm, N, P, A, SCSF, K, S, Q, U, layout = (4, 3), w = 1)



